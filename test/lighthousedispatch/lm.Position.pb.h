//// Generated by the protocol buffer compiler.  DO NOT EDIT!
//// source: lm.Position.proto
//
//#ifndef PROTOBUF_lm_2ePosition_2eproto__INCLUDED
//#define PROTOBUF_lm_2ePosition_2eproto__INCLUDED
//
//#include <string>
//
//#include <google/protobuf/stubs/common.h>
//
//#if GOOGLE_PROTOBUF_VERSION < 3002000
//#error This file was generated by a newer version of protoc which is
//#error incompatible with your Protocol Buffer headers.  Please update
//#error your headers.
//#endif
//#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
//#error This file was generated by an older version of protoc which is
//#error incompatible with your Protocol Buffer headers.  Please
//#error regenerate this file with a newer version of protoc.
//#endif
//
//#include <google/protobuf/io/coded_stream.h>
//#include <google/protobuf/arena.h>
//#include <google/protobuf/arenastring.h>
//#include <google/protobuf/generated_message_util.h>
//#include <google/protobuf/metadata.h>
//#include <google/protobuf/message.h>
//#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
//#include <google/protobuf/extension_set.h>  // IWYU pragma: export
//#include <google/protobuf/unknown_field_set.h>
//// @@protoc_insertion_point(includes)
//namespace msg_v0 {
//class MsgType0;
//class MsgType0DefaultTypeInternal;
//extern MsgType0DefaultTypeInternal _MsgType0_default_instance_;
//class msgBox;
//class msgBoxDefaultTypeInternal;
//extern msgBoxDefaultTypeInternal _msgBox_default_instance_;
//}  // namespace msg_v0
//
//namespace msg_v0 {
//
//namespace protobuf_lm_2ePosition_2eproto {
//// Internal implementation detail -- do not call these.
//struct TableStruct {
//  static const ::google::protobuf::uint32 offsets[];
//  static void InitDefaultsImpl();
//  static void Shutdown();
//};
//void AddDescriptors();
//void InitDefaults();
//}  // namespace protobuf_lm_2ePosition_2eproto
//
//// ===================================================================
//
//class MsgType0 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_v0.MsgType0) */ {
// public:
//  MsgType0();
//  virtual ~MsgType0();
//
//  MsgType0(const MsgType0& from);
//
//  inline MsgType0& operator=(const MsgType0& from) {
//    CopyFrom(from);
//    return *this;
//  }
//
//  static const ::google::protobuf::Descriptor* descriptor();
//  static const MsgType0& default_instance();
//
//  static inline const MsgType0* internal_default_instance() {
//    return reinterpret_cast<const MsgType0*>(
//               &_MsgType0_default_instance_);
//  }
//
//  void Swap(MsgType0* other);
//
//  // implements Message ----------------------------------------------
//
//  inline MsgType0* New() const PROTOBUF_FINAL { return New(NULL); }
//
//  MsgType0* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
//  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
//  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
//  void CopyFrom(const MsgType0& from);
//  void MergeFrom(const MsgType0& from);
//  void Clear() PROTOBUF_FINAL;
//  bool IsInitialized() const PROTOBUF_FINAL;
//
//  size_t ByteSizeLong() const PROTOBUF_FINAL;
//  bool MergePartialFromCodedStream(
//      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
//  void SerializeWithCachedSizes(
//      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
//  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
//      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
//  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
//      const PROTOBUF_FINAL {
//    return InternalSerializeWithCachedSizesToArray(
//        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
//  }
//  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
//  private:
//  void SharedCtor();
//  void SharedDtor();
//  void SetCachedSize(int size) const PROTOBUF_FINAL;
//  void InternalSwap(MsgType0* other);
//  private:
//  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
//    return NULL;
//  }
//  inline void* MaybeArenaPtr() const {
//    return NULL;
//  }
//  public:
//
//  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;
//
//  // nested types ----------------------------------------------------
//
//  // accessors -------------------------------------------------------
//
//  // string Msg = 2;
//  void clear_msg();
//  static const int kMsgFieldNumber = 2;
//  const ::std::string& msg() const;
//  void set_msg(const ::std::string& value);
//  #if LANG_CXX11
//  void set_msg(::std::string&& value);
//  #endif
//  void set_msg(const char* value);
//  void set_msg(const char* value, size_t size);
//  ::std::string* mutable_msg();
//  ::std::string* release_msg();
//  void set_allocated_msg(::std::string* msg);
//
//  // int32 id = 1;
//  void clear_id();
//  static const int kIdFieldNumber = 1;
//  ::google::protobuf::int32 id() const;
//  void set_id(::google::protobuf::int32 value);
//
//  // @@protoc_insertion_point(class_scope:msg_v0.MsgType0)
// private:
//
//  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
//  ::google::protobuf::internal::ArenaStringPtr msg_;
//  ::google::protobuf::int32 id_;
//  mutable int _cached_size_;
//  friend struct  protobuf_lm_2ePosition_2eproto::TableStruct;
//};
//// -------------------------------------------------------------------
//
//class msgBox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_v0.msgBox) */ {
// public:
//  msgBox();
//  virtual ~msgBox();
//
//  msgBox(const msgBox& from);
//
//  inline msgBox& operator=(const msgBox& from) {
//    CopyFrom(from);
//    return *this;
//  }
//
//  static const ::google::protobuf::Descriptor* descriptor();
//  static const msgBox& default_instance();
//
//  enum MessageCase {
//    kMsg0 = 1,
//    MESSAGE_NOT_SET = 0,
//  };
//
//  static inline const msgBox* internal_default_instance() {
//    return reinterpret_cast<const msgBox*>(
//               &_msgBox_default_instance_);
//  }
//
//  void Swap(msgBox* other);
//
//  // implements Message ----------------------------------------------
//
//  inline msgBox* New() const PROTOBUF_FINAL { return New(NULL); }
//
//  msgBox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
//  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
//  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
//  void CopyFrom(const msgBox& from);
//  void MergeFrom(const msgBox& from);
//  void Clear() PROTOBUF_FINAL;
//  bool IsInitialized() const PROTOBUF_FINAL;
//
//  size_t ByteSizeLong() const PROTOBUF_FINAL;
//  bool MergePartialFromCodedStream(
//      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
//  void SerializeWithCachedSizes(
//      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
//  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
//      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
//  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
//      const PROTOBUF_FINAL {
//    return InternalSerializeWithCachedSizesToArray(
//        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
//  }
//  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
//  private:
//  void SharedCtor();
//  void SharedDtor();
//  void SetCachedSize(int size) const PROTOBUF_FINAL;
//  void InternalSwap(msgBox* other);
//  private:
//  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
//    return NULL;
//  }
//  inline void* MaybeArenaPtr() const {
//    return NULL;
//  }
//  public:
//
//  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;
//
//  // nested types ----------------------------------------------------
//
//  // accessors -------------------------------------------------------
//
//  // .msg_v0.MsgType0 msg0 = 1;
//  bool has_msg0() const;
//  void clear_msg0();
//  static const int kMsg0FieldNumber = 1;
//  const ::msg_v0::MsgType0& msg0() const;
//  ::msg_v0::MsgType0* mutable_msg0();
//  ::msg_v0::MsgType0* release_msg0();
//  void set_allocated_msg0(::msg_v0::MsgType0* msg0);
//
//  MessageCase message_case() const;
//  // @@protoc_insertion_point(class_scope:msg_v0.msgBox)
// private:
//  void set_has_msg0();
//
//  inline bool has_message() const;
//  void clear_message();
//  inline void clear_has_message();
//
//  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
//  union MessageUnion {
//    MessageUnion() {}
//    ::msg_v0::MsgType0* msg0_;
//  } message_;
//  mutable int _cached_size_;
//  ::google::protobuf::uint32 _oneof_case_[1];
//
//  friend struct  protobuf_lm_2ePosition_2eproto::TableStruct;
//};
//// ===================================================================
//
//
//// ===================================================================
//
//#if !PROTOBUF_INLINE_NOT_IN_HEADERS
//// MsgType0
//
//// int32 id = 1;
//inline void MsgType0::clear_id() {
//  id_ = 0;
//}
//inline ::google::protobuf::int32 MsgType0::id() const {
//  // @@protoc_insertion_point(field_get:msg_v0.MsgType0.id)
//  return id_;
//}
//inline void MsgType0::set_id(::google::protobuf::int32 value) {
//  
//  id_ = value;
//  // @@protoc_insertion_point(field_set:msg_v0.MsgType0.id)
//}
//
//// string Msg = 2;
//inline void MsgType0::clear_msg() {
//  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
//}
//inline const ::std::string& MsgType0::msg() const {
//  // @@protoc_insertion_point(field_get:msg_v0.MsgType0.Msg)
//  return msg_.GetNoArena();
//}
//inline void MsgType0::set_msg(const ::std::string& value) {
//  
//  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
//  // @@protoc_insertion_point(field_set:msg_v0.MsgType0.Msg)
//}
//#if LANG_CXX11
//inline void MsgType0::set_msg(::std::string&& value) {
//  
//  msg_.SetNoArena(
//    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
//  // @@protoc_insertion_point(field_set_rvalue:msg_v0.MsgType0.Msg)
//}
//#endif
//inline void MsgType0::set_msg(const char* value) {
//  
//  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
//  // @@protoc_insertion_point(field_set_char:msg_v0.MsgType0.Msg)
//}
//inline void MsgType0::set_msg(const char* value, size_t size) {
//  
//  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
//      ::std::string(reinterpret_cast<const char*>(value), size));
//  // @@protoc_insertion_point(field_set_pointer:msg_v0.MsgType0.Msg)
//}
//inline ::std::string* MsgType0::mutable_msg() {
//  
//  // @@protoc_insertion_point(field_mutable:msg_v0.MsgType0.Msg)
//  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
//}
//inline ::std::string* MsgType0::release_msg() {
//  // @@protoc_insertion_point(field_release:msg_v0.MsgType0.Msg)
//  
//  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
//}
//inline void MsgType0::set_allocated_msg(::std::string* msg) {
//  if (msg != NULL) {
//    
//  } else {
//    
//  }
//  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
//  // @@protoc_insertion_point(field_set_allocated:msg_v0.MsgType0.Msg)
//}
//
//// -------------------------------------------------------------------
//
//// msgBox
//
//// .msg_v0.MsgType0 msg0 = 1;
//inline bool msgBox::has_msg0() const {
//  return message_case() == kMsg0;
//}
//inline void msgBox::set_has_msg0() {
//  _oneof_case_[0] = kMsg0;
//}
//inline void msgBox::clear_msg0() {
//  if (has_msg0()) {
//    delete message_.msg0_;
//    clear_has_message();
//  }
//}
//inline  const ::msg_v0::MsgType0& msgBox::msg0() const {
//  // @@protoc_insertion_point(field_get:msg_v0.msgBox.msg0)
//  return has_msg0()
//      ? *message_.msg0_
//      : ::msg_v0::MsgType0::default_instance();
//}
//inline ::msg_v0::MsgType0* msgBox::mutable_msg0() {
//  if (!has_msg0()) {
//    clear_message();
//    set_has_msg0();
//    message_.msg0_ = new ::msg_v0::MsgType0;
//  }
//  // @@protoc_insertion_point(field_mutable:msg_v0.msgBox.msg0)
//  return message_.msg0_;
//}
//inline ::msg_v0::MsgType0* msgBox::release_msg0() {
//  // @@protoc_insertion_point(field_release:msg_v0.msgBox.msg0)
//  if (has_msg0()) {
//    clear_has_message();
//    ::msg_v0::MsgType0* temp = message_.msg0_;
//    message_.msg0_ = NULL;
//    return temp;
//  } else {
//    return NULL;
//  }
//}
//inline void msgBox::set_allocated_msg0(::msg_v0::MsgType0* msg0) {
//  clear_message();
//  if (msg0) {
//    set_has_msg0();
//    message_.msg0_ = msg0;
//  }
//  // @@protoc_insertion_point(field_set_allocated:msg_v0.msgBox.msg0)
//}
//
//inline bool msgBox::has_message() const {
//  return message_case() != MESSAGE_NOT_SET;
//}
//inline void msgBox::clear_has_message() {
//  _oneof_case_[0] = MESSAGE_NOT_SET;
//}
//inline msgBox::MessageCase msgBox::message_case() const {
//  return msgBox::MessageCase(_oneof_case_[0]);
//}
//#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
//// -------------------------------------------------------------------
//
//
//// @@protoc_insertion_point(namespace_scope)
//
//
//}  // namespace msg_v0
//
//// @@protoc_insertion_point(global_scope)
//
//#endif  // PROTOBUF_lm_2ePosition_2eproto__INCLUDED
