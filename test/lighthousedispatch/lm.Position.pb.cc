// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lm.Position.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lm.Position.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg_v0 {
class MsgType0DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgType0> {
} _MsgType0_default_instance_;
class msgBoxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<msgBox> {
  public:
  const ::msg_v0::MsgType0* msg0_;
} _msgBox_default_instance_;

namespace protobuf_lm_2ePosition_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgType0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgType0, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgType0, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msgBox, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msgBox, _oneof_case_[0]),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_msgBox_default_instance_), msg0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msgBox, message_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(MsgType0)},
  { 6, -1, sizeof(msgBox)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgType0_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_msgBox_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "lm.Position.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _MsgType0_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _msgBox_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MsgType0_default_instance_.DefaultConstruct();
  _msgBox_default_instance_.DefaultConstruct();
  _msgBox_default_instance_.msg0_ = const_cast< ::msg_v0::MsgType0*>(
      ::msg_v0::MsgType0::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021lm.Position.proto\022\006msg_v0\"#\n\010MsgType0\022"
      "\n\n\002id\030\001 \001(\005\022\013\n\003Msg\030\002 \001(\t\"5\n\006msgBox\022 \n\004ms"
      "g0\030\001 \001(\0132\020.msg_v0.MsgType0H\000B\t\n\007messageb"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 127);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lm.Position.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_lm_2ePosition_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgType0::kIdFieldNumber;
const int MsgType0::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgType0::MsgType0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lm_2ePosition_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_v0.MsgType0)
}
MsgType0::MsgType0(const MsgType0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:msg_v0.MsgType0)
}

void MsgType0::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

MsgType0::~MsgType0() {
  // @@protoc_insertion_point(destructor:msg_v0.MsgType0)
  SharedDtor();
}

void MsgType0::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgType0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgType0::descriptor() {
  protobuf_lm_2ePosition_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lm_2ePosition_2eproto::file_level_metadata[0].descriptor;
}

const MsgType0& MsgType0::default_instance() {
  protobuf_lm_2ePosition_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgType0* MsgType0::New(::google::protobuf::Arena* arena) const {
  MsgType0* n = new MsgType0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgType0::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_v0.MsgType0)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

bool MsgType0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_v0.MsgType0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Msg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "msg_v0.MsgType0.Msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_v0.MsgType0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_v0.MsgType0)
  return false;
#undef DO_
}

void MsgType0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_v0.MsgType0)
  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msg_v0.MsgType0.Msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:msg_v0.MsgType0)
}

::google::protobuf::uint8* MsgType0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msg_v0.MsgType0)
  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msg_v0.MsgType0.Msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:msg_v0.MsgType0)
  return target;
}

size_t MsgType0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg_v0.MsgType0)
  size_t total_size = 0;

  // string Msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgType0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_v0.MsgType0)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgType0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgType0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_v0.MsgType0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_v0.MsgType0)
    MergeFrom(*source);
  }
}

void MsgType0::MergeFrom(const MsgType0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_v0.MsgType0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MsgType0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_v0.MsgType0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgType0::CopyFrom(const MsgType0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_v0.MsgType0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgType0::IsInitialized() const {
  return true;
}

void MsgType0::Swap(MsgType0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgType0::InternalSwap(MsgType0* other) {
  msg_.Swap(&other->msg_);
  std::swap(id_, other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgType0::GetMetadata() const {
  protobuf_lm_2ePosition_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lm_2ePosition_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgType0

// int32 id = 1;
void MsgType0::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 MsgType0::id() const {
  // @@protoc_insertion_point(field_get:msg_v0.MsgType0.id)
  return id_;
}
void MsgType0::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_v0.MsgType0.id)
}

// string Msg = 2;
void MsgType0::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgType0::msg() const {
  // @@protoc_insertion_point(field_get:msg_v0.MsgType0.Msg)
  return msg_.GetNoArena();
}
void MsgType0::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_v0.MsgType0.Msg)
}
#if LANG_CXX11
void MsgType0::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg_v0.MsgType0.Msg)
}
#endif
void MsgType0::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_v0.MsgType0.Msg)
}
void MsgType0::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_v0.MsgType0.Msg)
}
::std::string* MsgType0::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:msg_v0.MsgType0.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgType0::release_msg() {
  // @@protoc_insertion_point(field_release:msg_v0.MsgType0.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgType0::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:msg_v0.MsgType0.Msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msgBox::kMsg0FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msgBox::msgBox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lm_2ePosition_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_v0.msgBox)
}
msgBox::msgBox(const msgBox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kMsg0: {
      mutable_msg0()->::msg_v0::MsgType0::MergeFrom(from.msg0());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:msg_v0.msgBox)
}

void msgBox::SharedCtor() {
  clear_has_message();
  _cached_size_ = 0;
}

msgBox::~msgBox() {
  // @@protoc_insertion_point(destructor:msg_v0.msgBox)
  SharedDtor();
}

void msgBox::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
}

void msgBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msgBox::descriptor() {
  protobuf_lm_2ePosition_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lm_2ePosition_2eproto::file_level_metadata[1].descriptor;
}

const msgBox& msgBox::default_instance() {
  protobuf_lm_2ePosition_2eproto::InitDefaults();
  return *internal_default_instance();
}

msgBox* msgBox::New(::google::protobuf::Arena* arena) const {
  msgBox* n = new msgBox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msgBox::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:msg_v0.msgBox)
  switch (message_case()) {
    case kMsg0: {
      delete message_.msg0_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void msgBox::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_v0.msgBox)
  clear_message();
}

bool msgBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_v0.msgBox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .msg_v0.MsgType0 msg0 = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_v0.msgBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_v0.msgBox)
  return false;
#undef DO_
}

void msgBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_v0.msgBox)
  // .msg_v0.MsgType0 msg0 = 1;
  if (has_msg0()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *message_.msg0_, output);
  }

  // @@protoc_insertion_point(serialize_end:msg_v0.msgBox)
}

::google::protobuf::uint8* msgBox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msg_v0.msgBox)
  // .msg_v0.MsgType0 msg0 = 1;
  if (has_msg0()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *message_.msg0_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:msg_v0.msgBox)
  return target;
}

size_t msgBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg_v0.msgBox)
  size_t total_size = 0;

  switch (message_case()) {
    // .msg_v0.MsgType0 msg0 = 1;
    case kMsg0: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_.msg0_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msgBox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_v0.msgBox)
  GOOGLE_DCHECK_NE(&from, this);
  const msgBox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msgBox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_v0.msgBox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_v0.msgBox)
    MergeFrom(*source);
  }
}

void msgBox::MergeFrom(const msgBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_v0.msgBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  switch (from.message_case()) {
    case kMsg0: {
      mutable_msg0()->::msg_v0::MsgType0::MergeFrom(from.msg0());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void msgBox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_v0.msgBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msgBox::CopyFrom(const msgBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_v0.msgBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msgBox::IsInitialized() const {
  return true;
}

void msgBox::Swap(msgBox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msgBox::InternalSwap(msgBox* other) {
  std::swap(message_, other->message_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msgBox::GetMetadata() const {
  protobuf_lm_2ePosition_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lm_2ePosition_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// msgBox

// .msg_v0.MsgType0 msg0 = 1;
bool msgBox::has_msg0() const {
  return message_case() == kMsg0;
}
void msgBox::set_has_msg0() {
  _oneof_case_[0] = kMsg0;
}
void msgBox::clear_msg0() {
  if (has_msg0()) {
    delete message_.msg0_;
    clear_has_message();
  }
}
 const ::msg_v0::MsgType0& msgBox::msg0() const {
  // @@protoc_insertion_point(field_get:msg_v0.msgBox.msg0)
  return has_msg0()
      ? *message_.msg0_
      : ::msg_v0::MsgType0::default_instance();
}
::msg_v0::MsgType0* msgBox::mutable_msg0() {
  if (!has_msg0()) {
    clear_message();
    set_has_msg0();
    message_.msg0_ = new ::msg_v0::MsgType0;
  }
  // @@protoc_insertion_point(field_mutable:msg_v0.msgBox.msg0)
  return message_.msg0_;
}
::msg_v0::MsgType0* msgBox::release_msg0() {
  // @@protoc_insertion_point(field_release:msg_v0.msgBox.msg0)
  if (has_msg0()) {
    clear_has_message();
    ::msg_v0::MsgType0* temp = message_.msg0_;
    message_.msg0_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void msgBox::set_allocated_msg0(::msg_v0::MsgType0* msg0) {
  clear_message();
  if (msg0) {
    set_has_msg0();
    message_.msg0_ = msg0;
  }
  // @@protoc_insertion_point(field_set_allocated:msg_v0.msgBox.msg0)
}

bool msgBox::has_message() const {
  return message_case() != MESSAGE_NOT_SET;
}
void msgBox::clear_has_message() {
  _oneof_case_[0] = MESSAGE_NOT_SET;
}
msgBox::MessageCase msgBox::message_case() const {
  return msgBox::MessageCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_v0

// @@protoc_insertion_point(global_scope)
